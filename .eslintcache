[{"D:\\Projects\\Cursor-Education-React-HW\\HW19-React-Styled\\hw-19\\src\\index.js":"1","D:\\Projects\\Cursor-Education-React-HW\\HW19-React-Styled\\hw-19\\src\\App.js":"2","D:\\Projects\\Cursor-Education-React-HW\\HW19-React-Styled\\hw-19\\src\\reportWebVitals.js":"3","D:\\Projects\\Cursor-Education-React-HW\\HW19-React-Styled\\hw-19\\src\\sign_in\\SignIn.js":"4","D:\\Projects\\Cursor-Education-React-HW\\HW19-React-Styled\\hw-19\\src\\sing_up\\SignUp.js":"5","D:\\Projects\\Cursor-Education-React-HW\\HW19-React-Styled\\hw-19\\src\\modules\\localStorageMethods.js":"6","D:\\Projects\\Cursor-Education-React-HW\\HW19-React-Styled\\hw-19\\src\\forgot_password\\ForgotPassword.js":"7","D:\\Projects\\Cursor-Education-React-HW\\HW19-React-Styled\\hw-19\\src\\home\\Home.js":"8"},{"size":472,"mtime":1611413466653,"results":"9","hashOfConfig":"10"},{"size":690,"mtime":1611514376428,"results":"11","hashOfConfig":"10"},{"size":362,"mtime":499162500000,"results":"12","hashOfConfig":"10"},{"size":3300,"mtime":1611513180804,"results":"13","hashOfConfig":"10"},{"size":4031,"mtime":1611511996846,"results":"14","hashOfConfig":"10"},{"size":216,"mtime":1611511267388,"results":"15","hashOfConfig":"10"},{"size":174,"mtime":1611512848068,"results":"16","hashOfConfig":"10"},{"size":140,"mtime":1611513046969,"results":"17","hashOfConfig":"10"},{"filePath":"18","messages":"19","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"20"},"1szmske",{"filePath":"21","messages":"22","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"23","usedDeprecatedRules":"20"},{"filePath":"24","messages":"25","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"20"},{"filePath":"26","messages":"27","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"28","usedDeprecatedRules":"20"},{"filePath":"29","messages":"30","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"31","usedDeprecatedRules":"20"},{"filePath":"32","messages":"33","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"34","messages":"35","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"20"},{"filePath":"36","messages":"37","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"20"},"D:\\Projects\\Cursor-Education-React-HW\\HW19-React-Styled\\hw-19\\src\\index.js",[],["38","39"],"D:\\Projects\\Cursor-Education-React-HW\\HW19-React-Styled\\hw-19\\src\\App.js",["40"],"import { HashRouter as Router, Route, Link } from 'react-router-dom'\nimport SignIn from './sign_in/SignIn'\nimport SignUp from './sing_up/SignUp'\nimport ForgotPassword from './forgot_password/ForgotPassword'\nimport Home from './home/Home'\n\nexport default function App() {\n  return (\n    <div className=\"App\">\n      <Router>\n        <Route path=\"/\" component={SignIn} exact={true} />\n        <Route path=\"/sign-in\" component={SignIn} exact={true} />\n        <Route path=\"/sign-up\" exact={true} component={SignUp} />\n        <Route path=\"/home\" exact={true} component={Home} />\n        <Route path=\"/forgot-password\" exact={true} component={ForgotPassword} />\n      </Router>\n    </div>\n  )\n}\n","D:\\Projects\\Cursor-Education-React-HW\\HW19-React-Styled\\hw-19\\src\\reportWebVitals.js",[],"D:\\Projects\\Cursor-Education-React-HW\\HW19-React-Styled\\hw-19\\src\\sign_in\\SignIn.js",["41"],"import React, { useState, useEffect } from 'react'\r\nimport { Link } from 'react-router-dom'\r\nimport '../sign_in/sign-in.sass'\r\nimport authIcon from '../imgs/padlock.svg'\r\nimport { getUserFromLS } from '../modules/localStorageMethods'\r\n\r\nexport default function SignIn() {\r\n  const [email, setEmail] = useState({ value: '', right: false })\r\n  const [password, setPassword] = useState({ value: '', right: false })\r\n  const [rememberMe, setRememberMe] = useState(false)\r\n\r\n  useEffect(() => {\r\n    const user = getUserFromLS()\r\n\r\n    if (JSON.parse(localStorage.getItem('autofill'))) {\r\n      document.getElementById('emailInput').value = user.email\r\n      document.getElementById('passwordInput').value = user.password\r\n      document.getElementsByClassName('checkbox-remember')[0].checked = true\r\n      setRememberMe(true)\r\n    }\r\n  }, [])\r\n\r\n  const onFormSubmit = (e) => {\r\n    e.preventDefault()\r\n\r\n    const user = getUserFromLS()\r\n    if (\r\n      (email.right && password.right && email.value === user.email && password.value === user.password) ||\r\n      JSON.parse(localStorage.getItem('autofill'))\r\n    ) {\r\n      localStorage.setItem('autofill', JSON.stringify(rememberMe))\r\n      e.target.reset()\r\n      window.location.href = '/home'\r\n    }\r\n  }\r\n\r\n  const passwordChange = (e) => {\r\n    const valueOfInput = e.target.value\r\n\r\n    const passwordForm = /(?=.*[a-z])(?=.*[A-Z])......../\r\n\r\n    if (passwordForm.test(valueOfInput)) {\r\n      e.target.className = 'input right'\r\n      setPassword({ value: valueOfInput, right: true })\r\n    } else {\r\n      e.target.className = 'input wrong'\r\n      setPassword({ value: valueOfInput, right: false })\r\n    }\r\n  }\r\n\r\n  const emailChange = (e) => {\r\n    const valueOfInput = e.target.value\r\n\r\n    const emailForm = /...+@..+\\...+/\r\n\r\n    if (emailForm.test(valueOfInput)) {\r\n      e.target.className = 'input right'\r\n      setEmail({ value: valueOfInput, right: true })\r\n    } else {\r\n      e.target.className = 'input wrong'\r\n      setEmail({ value: valueOfInput, right: false })\r\n    }\r\n  }\r\n\r\n  const rememberChange = (e) => {\r\n    setRememberMe(e.target.checked)\r\n  }\r\n\r\n  return (\r\n    <div className=\"sing-in\">\r\n      <div className=\"icon-container\">\r\n        <img src={authIcon} width=\"25px\" height=\"25px\" />\r\n      </div>\r\n      <h2 className=\"title\">Sing in</h2>\r\n      <form action=\"\" className=\"sign-in-form\" onSubmit={onFormSubmit}>\r\n        <input type=\"email\" className=\"input\" id=\"emailInput\" placeholder=\"Email Address *\" onChange={emailChange} />\r\n        <input type=\"password\" className=\"input\" id=\"passwordInput\" placeholder=\"Password *\" onChange={passwordChange} />\r\n        <div className=\"remember\">\r\n          <input type=\"checkbox\" name=\"remember\" className=\"checkbox-remember\" onClick={rememberChange} />\r\n          <label htmlFor=\"remember\">Remember me</label>\r\n        </div>\r\n        <input type=\"submit\" value=\"SIGN IN\" className=\"submit-btn\" />\r\n      </form>\r\n      <div className=\"links-container-sign-in\">\r\n        <Link to=\"/forgot-password\" className=\"links\">\r\n          Forgot password?\r\n        </Link>\r\n        <Link to=\"/sign-up\" className=\"links\">\r\n          Don't have an account? Sign up\r\n        </Link>\r\n      </div>\r\n      <p className=\"copyright\">Copyright @ Authorization 2020</p>\r\n    </div>\r\n  )\r\n}\r\n","D:\\Projects\\Cursor-Education-React-HW\\HW19-React-Styled\\hw-19\\src\\sing_up\\SignUp.js",["42"],"import React, { useState } from 'react'\r\nimport { Link } from 'react-router-dom'\r\n\r\nimport { addUserToLS } from '../modules/localStorageMethods'\r\n\r\nimport '../sing_up/sign-up.sass'\r\nimport authIcon from '../imgs/padlock.svg'\r\n\r\nexport default function SignIn() {\r\n  const [firstName, setFirstName] = useState({ value: '', right: false })\r\n  const [lastName, setLastName] = useState({ value: '', right: false })\r\n  const [email, setEmail] = useState({ value: '', right: false })\r\n  const [password, setPassword] = useState({ value: '', right: false })\r\n  const [policyChecked, setpolicyChecked] = useState(false)\r\n\r\n  const onFormSubmit = (e) => {\r\n    e.preventDefault()\r\n\r\n    if (firstName.right && lastName.right && email.right && password.right && policyChecked) {\r\n      addUserToLS({ firstName: firstName.value, lastName: lastName.value, email: email.value, password: password.value })\r\n      localStorage.setItem('autofill', JSON.stringify(false))\r\n      e.target.reset()\r\n      window.location.href = '/home'\r\n    }\r\n  }\r\n\r\n  const policyChange = (e) => {\r\n    setpolicyChecked(e.target.checked)\r\n  }\r\n\r\n  const fNameChange = (e) => {\r\n    const valueOfInput = e.target.value\r\n    const nameForm = /...+/\r\n\r\n    if (nameForm.test(valueOfInput)) {\r\n      e.target.className = 'input name right'\r\n      setFirstName({ value: valueOfInput, right: true })\r\n    } else {\r\n      e.target.className = 'input name wrong'\r\n      setFirstName({ value: valueOfInput, right: false })\r\n    }\r\n  }\r\n\r\n  const lNameChange = (e) => {\r\n    const valueOfInput = e.target.value\r\n\r\n    const nameForm = /...+/\r\n\r\n    if (nameForm.test(valueOfInput)) {\r\n      e.target.className = 'input name right'\r\n      setLastName({ value: valueOfInput, right: true })\r\n    } else {\r\n      e.target.className = 'input name wrong'\r\n      setLastName({ value: valueOfInput, right: false })\r\n    }\r\n  }\r\n\r\n  const passwordChange = (e) => {\r\n    const valueOfInput = e.target.value\r\n\r\n    const passwordForm = /(?=.*[a-z])(?=.*[A-Z])......../\r\n\r\n    if (passwordForm.test(valueOfInput)) {\r\n      e.target.className = 'input right'\r\n      setPassword({ value: valueOfInput, right: true })\r\n    } else {\r\n      e.target.className = 'input wrong'\r\n      setPassword({ value: valueOfInput, right: false })\r\n    }\r\n  }\r\n\r\n  const emailChange = (e) => {\r\n    const valueOfInput = e.target.value\r\n\r\n    const emailForm = /...+@..+\\...+/\r\n\r\n    if (emailForm.test(valueOfInput)) {\r\n      e.target.className = 'input right'\r\n      setEmail({ value: valueOfInput, right: true })\r\n    } else {\r\n      e.target.className = 'input wrong'\r\n      setEmail({ value: valueOfInput, right: false })\r\n    }\r\n  }\r\n\r\n  return (\r\n    <div className=\"sing-in\">\r\n      <div className=\"icon-container\">\r\n        <img src={authIcon} width=\"25px\" height=\"25px\" />\r\n      </div>\r\n      <h2 className=\"title\">Sing up</h2>\r\n      <form action=\"\" className=\"sign-up-form\" onSubmit={onFormSubmit}>\r\n        <div className=\"full-name-container\">\r\n          <input type=\"text\" className=\"input name\" placeholder=\"First name *\" onChange={fNameChange} />\r\n          <input type=\"text\" className=\"input name\" placeholder=\"Last name *\" onChange={lNameChange} />\r\n        </div>\r\n        <input type=\"email\" className=\"input\" placeholder=\"Email Address*\" onChange={emailChange} />\r\n        <input type=\"password\" className=\"input\" placeholder=\"Password*\" onChange={passwordChange} />\r\n        <div className=\"license\">\r\n          <input type=\"checkbox\" name=\"license\" className=\"checkbox-license\" onClick={policyChange} />\r\n          <label htmlFor=\"license\">I want to recive inspiration, marketing promotions and sell soul to the devil</label>\r\n        </div>\r\n        <input type=\"submit\" value=\"SIGN UP\" className=\"submit-btn\" />\r\n      </form>\r\n      <div className=\"links-container\">\r\n        <Link to=\"/sign-in\" className=\"links\">\r\n          Already have an account? Sign in\r\n        </Link>\r\n      </div>\r\n      <p className=\"copyright\">Copyright @ Authorization 2020</p>\r\n    </div>\r\n  )\r\n}\r\n","D:\\Projects\\Cursor-Education-React-HW\\HW19-React-Styled\\hw-19\\src\\modules\\localStorageMethods.js",[],"D:\\Projects\\Cursor-Education-React-HW\\HW19-React-Styled\\hw-19\\src\\forgot_password\\ForgotPassword.js",[],"D:\\Projects\\Cursor-Education-React-HW\\HW19-React-Styled\\hw-19\\src\\home\\Home.js",[],{"ruleId":"43","replacedBy":"44"},{"ruleId":"45","replacedBy":"46"},{"ruleId":"47","severity":1,"message":"48","line":1,"column":39,"nodeType":"49","messageId":"50","endLine":1,"endColumn":43},{"ruleId":"51","severity":1,"message":"52","line":72,"column":9,"nodeType":"53","endLine":72,"endColumn":58},{"ruleId":"51","severity":1,"message":"52","line":89,"column":9,"nodeType":"53","endLine":89,"endColumn":58},"no-native-reassign",["54"],"no-negated-in-lhs",["55"],"no-unused-vars","'Link' is defined but never used.","Identifier","unusedVar","jsx-a11y/alt-text","img elements must have an alt prop, either with meaningful text, or an empty string for decorative images.","JSXOpeningElement","no-global-assign","no-unsafe-negation"]